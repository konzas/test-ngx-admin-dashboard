{"version":3,"sources":["ng://ng-gantt/gantt/gantt.component.ts","ng://ng-gantt/lib.module.ts"],"names":["GanttEditorComponent","Math","floor","random","GanttEditorOptions","Object","defineProperty","prototype","value","this","_data","editor","destroy","ngOnInit","options","optionsChanged","g","((JSGantt)).GanttChart","ganttEditorContainer","nativeElement","getDivId","setOptions","vCaptionType","vQuarterColWidth","vDateTaskDisplayFormat","vDayMajorDateDisplayFormat","vWeekMinorDateDisplayFormat","vShowTaskInfoLink","vShowEndWeekDate","vUseSingleCell","vFormatArr","forEach","row","pGantt","AddTaskItemObject","Draw","newOptions","Component","args","selector","template","ViewChild","Input","NgGanttEditorModule","forRoot","ngModule","providers","NgModule","imports","CommonModule","declarations","exports"],"mappings":"+WAAA,IAAAA,EAAA,WA8BE,SAAAA,YAjBY,iBAAmBC,KAAKC,MAAsB,IAAhBD,KAAKE,+BACvB,eAMe,IAAIC,SAC3CC,OAAAC,eACIN,EAAAO,UAAA,OAAI,KADR,SACSC,GACPC,KAAKC,MAAQF,EACTC,KAAKE,SACPF,KAAKG,UACLH,KAAKI,6CAQTb,EAAAO,UAAAM,SAAA,WACsBJ,KAAKK,SACpBL,KAAKM,gBAAkBN,KAAKE,QACfF,KAAKE,OAAOG,QAG9B,IAAME,EAAIP,KAAKE,OAAS,IAAIM,EAAAA,WAA0BR,KAAKS,qBAAqBC,cAAe,QAE3E,MAAhBH,EAAEI,aAIJJ,EAAEK,WAAW,CACXC,aAAc,WACdC,iBAAkB,GAClBC,uBAAwB,oBACxBC,2BAA4B,qBAC5BC,4BAA6B,SAC7BC,kBAAmB,EACnBC,iBAAkB,EAClBC,eAAgB,IAEhBC,WAAY,CAAC,MAAO,OAAQ,QAAS,aAEnCrB,KAAKC,OAASD,KAAKC,MAAMqB,SAC3BtB,KAAKC,MAAMqB,QAAQ,SAAAC,IACjBA,EAAIC,OAASjB,GACXkB,kBAAkBF,KAGxBhB,EAAEmB,SAQCnC,EAAAO,UAAAc,oBAAWe,GACZ3B,KAAKE,QACPF,KAAKG,UAEPH,KAAKM,gBAAiB,EACtBN,KAAKK,QAAUsB,EACf3B,KAAKI,YAGAb,EAAAO,UAAAK,yCA3ERyB,EAAAA,UAASC,KAAA,CAAC,CAETC,SAAU,WACVC,SAAU,sIAOTC,EAAAA,UAASH,KAAA,CAAC,yCAIVI,EAAAA,oBACAA,EAAAA,MAAKJ,KAAA,CAAC,aArBT,GAsFAlC,EAOE,SAAAA,MC7FFuC,EAAA,gCAiBgBA,EAAAC,mBAEZ,MAAO,CACLC,SAAUF,EACVG,UAAW,yBAjBhBC,EAAAA,SAAQT,KAAA,CAAC,CACRU,QAAS,CACPC,EAAAA,cAEFC,aAAc,CACZlD,GAEFmD,QAAS,CACPnD,SAZJ","sourcesContent":["import {\n  Component, ElementRef, Input, OnInit, ViewChild\n} from '@angular/core';\n// import { JSGantt } from 'jsgantt-improved';\nimport * as JSGantt from 'jsgantt-improved';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ng-gantt',\n  template: '<div [id]=\"id\" #ganttEditorContainer></div>'\n})\nexport class GanttEditorComponent implements OnInit {\n  private editor: any;\n  public id = 'anggantteditor' + Math.floor(Math.random() * 1000000);\n  public optionsChanged = false;\n\n  @ViewChild('ganttEditorContainer') ganttEditorContainer: ElementRef;\n\n  private _data;\n\n  @Input() options: GanttEditorOptions = new GanttEditorOptions();\n  @Input('data')\n  set data(value: Object) {\n    this._data = value;\n    if (this.editor) {\n      this.destroy();\n      this.ngOnInit();\n    }\n  }\n\n  constructor() {\n\n  }\n\n  ngOnInit() {\n    let optionsBefore = this.options;\n    if (!this.optionsChanged && this.editor) {\n      optionsBefore = this.editor.options;\n    }\n    // document.getElementById('embedded-Gantt')\n    const g = this.editor = new (<any>JSGantt).GanttChart(this.ganttEditorContainer.nativeElement, 'week');\n\n    if (g.getDivId() != null) {\n\n      // JSGantt.parseJSON('./fixes/data.json', g);\n\n      g.setOptions({\n        vCaptionType: 'Complete',  // Set to Show Caption : None,Caption,Resource,Duration,Complete,\n        vQuarterColWidth: 36,\n        vDateTaskDisplayFormat: 'day dd month yyyy', // Shown in tool tip box\n        vDayMajorDateDisplayFormat: 'mon yyyy - Week ww', // Set format to display dates in the \"Major\" header of the \"Day\" view\n        vWeekMinorDateDisplayFormat: 'dd mon', // Set format to display dates in the \"Minor\" header of the \"Week\" view\n        vShowTaskInfoLink: 1, // Show link in tool tip (0/1)\n        vShowEndWeekDate: 0,  // Show/Hide the date for the last day of the week in header for\n        vUseSingleCell: 10000,\n        // Even with setUseSingleCell using Hour format on such a large chart can cause issues in some browsers\n        vFormatArr: ['Day', 'Week', 'Month', 'Quarter'],\n      });\n      if (this._data && this._data.forEach) {\n        this._data.forEach(row => {\n          row.pGantt = g;\n          g.AddTaskItemObject(row);\n        })\n      }\n      g.Draw();\n    }\n  }\n\n  // public get(): JSON {\n  //   return this.editor.get();\n  // }\n\n  public setOptions(newOptions: GanttEditorOptions) {\n    if (this.editor) {\n      this.destroy();\n    }\n    this.optionsChanged = true;\n    this.options = newOptions;\n    this.ngOnInit();\n  }\n\n  public destroy() {\n    // this.editor.destroy();\n  }\n}\n\nexport class GanttEditorOptions {\n\n  // public onEditable: (node: GanttEditorTreeNode | {}) => boolean | { field: boolean, value: boolean };\n  // public theme: Number;\n  // public language: String;\n  // public languages: Object;\n\n  constructor() {\n    // this.escapeUnicode = false;\n    // this.sortObjectKeys = false;\n    // this.history = true;\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GanttEditorComponent } from './gantt/gantt.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    GanttEditorComponent\n  ],\n  exports: [\n    GanttEditorComponent\n  ]\n})\nexport class NgGanttEditorModule {\n\n  public static forRoot(): ModuleWithProviders {\n\n    return {\n      ngModule: NgGanttEditorModule,\n      providers: [\n      ]\n    };\n  }\n}\n"]}